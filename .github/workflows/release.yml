name: Release

permissions:
  contents: write
  packages: write
  pages: write
  deployments: write
  pull-requests: write
  issues: write

on:
  release:
    types: [created]

jobs:

  goreleaser:
    if: true # false to skip job during debug
    runs-on: ubuntu-latest
    name: goreleaser
    steps:

    - name: Set up Golang
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v5

    - name: Unshallow
      run: git fetch --prune --unshallow

    - name: Release via goreleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  docker:
    if: true # false to skip job during debug
    runs-on: ubuntu-latest
    steps:
        
    - name: Check out code into the Go module directory
      uses: actions/checkout@v5

    - name: Prepare build metadata
      id: meta
      run: |
        echo "GIT_HASH=${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "GIT_TIME=$(git show -s --format=%cI HEAD)" >> $GITHUB_OUTPUT
        echo "VERSION=${{ github.ref_name }}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: ./.github/actions/build-docker
      with:
        dockerfile: Dockerfile
        image-name: cybertecpostgresql/pg_timetable
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        platforms: linux/amd64,linux/arm64
        push: 'true'
        cache-scope: shared-release
        build-args: |
          COMMIT=${{ steps.meta.outputs.GIT_HASH }}
          DATE=${{ steps.meta.outputs.GIT_TIME }}
          VERSION=${{ steps.meta.outputs.VERSION }}      
