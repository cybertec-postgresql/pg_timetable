name: Release
on:
  release:
    types: [created]

jobs:

  goreleaser:
    if: true # false to skip job during debug
    runs-on: ubuntu-latest
    name: goreleaser
    steps:

    - name: Set up Golang
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Unshallow
      run: git fetch --prune --unshallow

    - name: Release via goreleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  docker:
    if: true # false to skip job during debug
    runs-on: ubuntu-latest
    steps:
        
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Version strings
      id: version
      run: |
        echo "RELEASE_TIME=$(git show -s --format=%cI HEAD)" >> $GITHUB_OUTPUT        

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      env:
        VERSION: ${{ github.ref_name }}
        COMMIT: ${{ github.sha }}
        DATE: ${{ steps.version.outputs.RELEASE_TIME }}       
      with:
        name: cybertecpostgresql/pg_timetable
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildargs: VERSION,COMMIT,DATE
        tag_semver: true